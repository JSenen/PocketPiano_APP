apply plugin: 'com.android.application'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {

    compileSdkVersion 34

    defaultConfig {
        applicationId "com.espressif.wifi_provisioning"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 21
        versionName "2.2.1 "
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        buildConfig true // Esta línea habilita la generación de BuildConfig
    }

    //Cambio nombre de la app compilada
    applicationVariants.all { variant ->
        variant.outputs.all {
            // Aquí puedes especificar el nombre personalizado para el archivo APK
            outputFileName = "POCKETPIANO_OTA_v1.apk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "proof_of_possesion", "AcupetAP"
            resValue "string", "wifi_base_url", "192.168.4.1:80"
            resValue "string", "wifi_device_name_prefix", "PROV_"
            resValue "string", "ble_device_name_prefix", "PROV_"
            buildConfigField "boolean", "isQrCodeSupported", "false"
            buildConfigField "boolean", "isSettingsAllowed", "true"
            buildConfigField "boolean", "isFilteringByPrefixAllowed", "true"
        }

        debug {
            debuggable true
            resValue "string", "proof_of_possesion", "AcupetAP"
            resValue "string", "wifi_base_url", "192.168.4.1:80"
            resValue "string", "wifi_device_name_prefix", "PROV_"
            resValue "string", "ble_device_name_prefix", "PROV_"
            buildConfigField "boolean", "isQrCodeSupported", "false"
            buildConfigField "boolean", "isSettingsAllowed", "true"
            buildConfigField "boolean", "isFilteringByPrefixAllowed", "true"
        }
    }
    namespace 'com.espressif.wifi_provisioning'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'


    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.activity:activity:1.9.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    implementation 'com.google.protobuf:protobuf-javalite:3.18.0'
    implementation 'com.google.crypto.tink:tink-android:1.6.1'
    implementation project(path: ':provisioning')

    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.2'
    implementation 'com.github.firdausmaulan:AVLoadingIndicatorView:2.3.0'

    implementation 'com.google.android.gms:play-services-threadnetwork:16.0.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
}
